{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","fetch","response","json","FindMovie","addMovie","useState","newTitle","setTitle","foundMovie","setFoundMovie","movieNotFound","setMovieNotFound","searchMovie","Error","Title","Plot","Poster","imdbID","onSubmit","event","titleText","preventDefault","htmlFor","type","id","placeholder","classNames","autoComplete","value","onChange","target","disabled","onClick","App","data","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uCCJ3BG,G,MAAQ,uCAAG,WAAMd,GAAN,eAAAe,EAAA,sEACCC,MAAM,GAAD,OALd,2BAKc,mBAHlB,WAGkB,cAA+BhB,IADrC,cAChBiB,EADgB,yBAGfA,EAASC,QAHM,2CAAH,uDCIRC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAClCC,EADkC,KACxBC,EADwB,OAELF,mBAAS,MAFJ,mBAElCG,EAFkC,KAEtBC,EAFsB,OAGCJ,mBAAS,IAHV,mBAGlCK,EAHkC,KAGnBC,EAHmB,KASnCC,EAAW,uCAAG,WAAM5B,GAAN,eAAAe,EAAA,sEACED,EAASd,GADX,OACZW,EADY,OAGlBgB,EAAiBhB,EAAMkB,OAEtBlB,EAAMmB,OACDL,EAAc,CAChBzB,MAAOW,EAAMmB,MACb7B,YAAaU,EAAMoB,KACnB7B,OAAQS,EAAMqB,OACd7B,QAAQ,8BAAD,OAAgCQ,EAAMsB,OAAtC,KACPpB,OAAQF,EAAMsB,SAXA,2CAAH,sDAejB,OACE,oCACE,0BACE7B,UAAU,aACV8B,SAAU,SAACC,GAvBU,IAACC,EAwBpBD,EAAME,iBAxBcD,EAyBDd,EAxBxBA,GAAcM,EAAYQ,KA2BvB,yBAAKhC,UAAU,SACb,2BAAOA,UAAU,QAAQkC,QAAQ,eAAjC,eAIA,yBAAKlC,UAAU,WACb,2BACEmC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrC,UAAWsC,IAAW,QAAS,CAC7B,YAAahB,IAEfiB,aAAa,MACbC,MAAOtB,EACPuB,SAAU,SAACV,GACTZ,EAASY,EAAMW,OAAOF,OACtBjB,GAAiB,OAIrBD,GAEE,uBAAGtB,UAAU,kBAAb,yCAON,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,mBAFZ,iBAQF,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,oBACV2C,UAAWvB,EACXwB,QAAS,WACNxB,GACIJ,EAASI,GACdD,EAAS,IACTE,EAAc,QARlB,sBAiBN,yBAAKrB,UAAU,aACb,wBAAIA,UAAU,SAAd,YACGsB,GAAmBF,GAAgB,kBAAC,EAAcA,M,OChGhDyB,EAAM,WAAO,IAAD,EACI5B,mBAAS6B,GADb,mBAChBzC,EADgB,KACRW,EADQ,KAQvB,OACE,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,SAXM,SAAC+B,IACpB1C,EAAO2C,MAAK,SAAAzC,GAAK,OAAIA,EAAME,SAAWsC,EAAStC,WAC7CO,EAAS,GAAD,mBAAKX,GAAL,CAAa0C,WCN7BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.910d2814.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","\nconst API_URL = 'https://www.omdbapi.com/';\n\nconst KEY = 'a613725b';\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${API_URL}?apikey=${KEY}&t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [newTitle, setTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [movieNotFound, setMovieNotFound] = useState('');\n\n  const checkForEmptyTitle = (titleText) => {\n    (newTitle) && (searchMovie(titleText));\n  };\n\n  const searchMovie = async(title) => {\n    const movie = await getMovie(title);\n\n    setMovieNotFound(movie.Error);\n\n    (movie.Title)\n      && (setFoundMovie({\n        title: movie.Title,\n        description: movie.Plot,\n        imgUrl: movie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n        imdbId: movie.imdbID,\n      }));\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          checkForEmptyTitle(newTitle);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': movieNotFound,\n              })}\n              autoComplete=\"off\"\n              value={newTitle}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setMovieNotFound(false);\n              }}\n            />\n          </div>\n          {(movieNotFound)\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!foundMovie}\n              onClick={() => {\n                (foundMovie)\n                  && addMovie(foundMovie);\n                setTitle('');\n                setFoundMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {(!movieNotFound) && (foundMovie) && (<MovieCard {...foundMovie} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addMovie] = useState(data);\n\n  const addMovieToList = (newMovie) => {\n    (!movies.some(movie => movie.imdbId === newMovie.imdbId))\n    && (addMovie([...movies, newMovie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovieToList} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}